Парамеры в ссылках:

    <Route path="blog/:id" element={<Singlepage />} />
    <Route path="blog/:id/edit" element={<Editpost />} />
    <Route path="blog/new" element={<CreatePost />} />

Параметры, это дополнительные вложенные пути (path="blog/:id/edit")
Через : мы можем указать динамический путь, который будет приходить в зависимости, от клика, на текущую ссылку.
Также мы можем получить этот параметр в компоненте на который ведет этот route через хук useParams.

    const { id } = useParams();

Получаем id нашего route и после этого можем его использовать для пути дальнейших ссылок.

    <Link to={`/blog/${id}/edit`}>Edit this post</Link>

=================================================================================================================

Работа с историей, локацией и приватными route:

Чтобы работать с историй браузера, нужно использовать хук useNavigate().

    const navigate = useNavigate()

navigate может принимать, как ссылку, так и -1, это на одну страницу назад, -2, на две и т.д.
Так же можно идти и вперед по истории использовав положительные цифры 1, 2, 3 и т.д.

    const goBack = () => navigate(-1);

Когда мы параметром указываем не цифру, а путь переодресации, то там указывается несколько параметров:

    const goHome = () => navigate('/', {replace: true});

1. Это наш путь куда мы хотим отправиться
2. Это объект в котором есть два поля replace, store

replace - отвечает за запоминание в истории данного route, если стоит true, то в историю н будет записана данная переодресация.
(по умолчанию у replace стоит false, даже если мы его не указываем)
state - мы в него можем передать, какую-либо информацию и использовать на странице, куда мы будем переадресованы.

===<Но так лучше не делать, лучше использовать компонент Link>===

=================================================================================================================

Переадресация: 

Для переадресации у нас есть компонент Navigate

    <Route path="about" element={<AboutPage />} />
    <Route path="about-us" element={<Navigate to="/about" replace />} />

Таким образом у нас две ссылки ведут на один компонент, без дублирования кода.

=================================================================================================================

Хук useLocation() - показывает информацию о route.

=================================================================================================================

Приватные route: 





